// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: versionRequest.proto

package ralph_version_protobuffs;

public final class VersionRequestProto {
  private VersionRequestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VersionRequestMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint64 query_id = 1;
    /**
     * <code>required uint64 query_id = 1;</code>
     */
    boolean hasQueryId();
    /**
     * <code>required uint64 query_id = 1;</code>
     */
    long getQueryId();

    // repeated string device_id_list = 2;
    /**
     * <code>repeated string device_id_list = 2;</code>
     *
     * <pre>
     * if empty, query over all devices
     * </pre>
     */
    java.util.List<java.lang.String>
    getDeviceIdListList();
    /**
     * <code>repeated string device_id_list = 2;</code>
     *
     * <pre>
     * if empty, query over all devices
     * </pre>
     */
    int getDeviceIdListCount();
    /**
     * <code>repeated string device_id_list = 2;</code>
     *
     * <pre>
     * if empty, query over all devices
     * </pre>
     */
    java.lang.String getDeviceIdList(int index);
    /**
     * <code>repeated string device_id_list = 2;</code>
     *
     * <pre>
     * if empty, query over all devices
     * </pre>
     */
    com.google.protobuf.ByteString
        getDeviceIdListBytes(int index);

    // optional uint64 lower_root_commit_lamport_time = 3;
    /**
     * <code>optional uint64 lower_root_commit_lamport_time = 3;</code>
     *
     * <pre>
     * The following fields are optional. If they do not exist, do not
     * use them as filters when generating responses.  Eg., if
     * lower_root_commit_lamport_time and
     * upper_root_commit_lamport_time are 1 and 3, then only return
     * updates that happened with a root commit lamport time of 1, 2,
     * or 3.  However, if they're unspecified, return all updates at
     * any time (unless some other filter is set).
     * </pre>
     */
    boolean hasLowerRootCommitLamportTime();
    /**
     * <code>optional uint64 lower_root_commit_lamport_time = 3;</code>
     *
     * <pre>
     * The following fields are optional. If they do not exist, do not
     * use them as filters when generating responses.  Eg., if
     * lower_root_commit_lamport_time and
     * upper_root_commit_lamport_time are 1 and 3, then only return
     * updates that happened with a root commit lamport time of 1, 2,
     * or 3.  However, if they're unspecified, return all updates at
     * any time (unless some other filter is set).
     * </pre>
     */
    long getLowerRootCommitLamportTime();

    // optional uint64 upper_root_commit_lamport_time = 4;
    /**
     * <code>optional uint64 upper_root_commit_lamport_time = 4;</code>
     */
    boolean hasUpperRootCommitLamportTime();
    /**
     * <code>optional uint64 upper_root_commit_lamport_time = 4;</code>
     */
    long getUpperRootCommitLamportTime();

    // optional uint64 lower_local_lamport_time = 5;
    /**
     * <code>optional uint64 lower_local_lamport_time = 5;</code>
     */
    boolean hasLowerLocalLamportTime();
    /**
     * <code>optional uint64 lower_local_lamport_time = 5;</code>
     */
    long getLowerLocalLamportTime();

    // optional uint64 upper_local_lamport_time = 6;
    /**
     * <code>optional uint64 upper_local_lamport_time = 6;</code>
     */
    boolean hasUpperLocalLamportTime();
    /**
     * <code>optional uint64 upper_local_lamport_time = 6;</code>
     */
    long getUpperLocalLamportTime();

    // optional .UUID root_application_uuid = 7;
    /**
     * <code>optional .UUID root_application_uuid = 7;</code>
     */
    boolean hasRootApplicationUuid();
    /**
     * <code>optional .UUID root_application_uuid = 7;</code>
     */
    ralph_version_protobuffs.UtilProto.UUID getRootApplicationUuid();
    /**
     * <code>optional .UUID root_application_uuid = 7;</code>
     */
    ralph_version_protobuffs.UtilProto.UUIDOrBuilder getRootApplicationUuidOrBuilder();

    // optional string event_name = 8;
    /**
     * <code>optional string event_name = 8;</code>
     */
    boolean hasEventName();
    /**
     * <code>optional string event_name = 8;</code>
     */
    java.lang.String getEventName();
    /**
     * <code>optional string event_name = 8;</code>
     */
    com.google.protobuf.ByteString
        getEventNameBytes();

    // optional .UUID event_uuid = 9;
    /**
     * <code>optional .UUID event_uuid = 9;</code>
     */
    boolean hasEventUuid();
    /**
     * <code>optional .UUID event_uuid = 9;</code>
     */
    ralph_version_protobuffs.UtilProto.UUID getEventUuid();
    /**
     * <code>optional .UUID event_uuid = 9;</code>
     */
    ralph_version_protobuffs.UtilProto.UUIDOrBuilder getEventUuidOrBuilder();
  }
  /**
   * Protobuf type {@code VersionRequestMessage}
   */
  public static final class VersionRequestMessage extends
      com.google.protobuf.GeneratedMessage
      implements VersionRequestMessageOrBuilder {
    // Use VersionRequestMessage.newBuilder() to construct.
    private VersionRequestMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VersionRequestMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VersionRequestMessage defaultInstance;
    public static VersionRequestMessage getDefaultInstance() {
      return defaultInstance;
    }

    public VersionRequestMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VersionRequestMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              queryId_ = input.readUInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                deviceIdList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              deviceIdList_.add(input.readBytes());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              lowerRootCommitLamportTime_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              upperRootCommitLamportTime_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              lowerLocalLamportTime_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              upperLocalLamportTime_ = input.readUInt64();
              break;
            }
            case 58: {
              ralph_version_protobuffs.UtilProto.UUID.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = rootApplicationUuid_.toBuilder();
              }
              rootApplicationUuid_ = input.readMessage(ralph_version_protobuffs.UtilProto.UUID.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rootApplicationUuid_);
                rootApplicationUuid_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              bitField0_ |= 0x00000040;
              eventName_ = input.readBytes();
              break;
            }
            case 74: {
              ralph_version_protobuffs.UtilProto.UUID.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = eventUuid_.toBuilder();
              }
              eventUuid_ = input.readMessage(ralph_version_protobuffs.UtilProto.UUID.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(eventUuid_);
                eventUuid_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          deviceIdList_ = new com.google.protobuf.UnmodifiableLazyStringList(deviceIdList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ralph_version_protobuffs.VersionRequestProto.internal_static_VersionRequestMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ralph_version_protobuffs.VersionRequestProto.internal_static_VersionRequestMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage.class, ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<VersionRequestMessage> PARSER =
        new com.google.protobuf.AbstractParser<VersionRequestMessage>() {
      public VersionRequestMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VersionRequestMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VersionRequestMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint64 query_id = 1;
    public static final int QUERY_ID_FIELD_NUMBER = 1;
    private long queryId_;
    /**
     * <code>required uint64 query_id = 1;</code>
     */
    public boolean hasQueryId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 query_id = 1;</code>
     */
    public long getQueryId() {
      return queryId_;
    }

    // repeated string device_id_list = 2;
    public static final int DEVICE_ID_LIST_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList deviceIdList_;
    /**
     * <code>repeated string device_id_list = 2;</code>
     *
     * <pre>
     * if empty, query over all devices
     * </pre>
     */
    public java.util.List<java.lang.String>
        getDeviceIdListList() {
      return deviceIdList_;
    }
    /**
     * <code>repeated string device_id_list = 2;</code>
     *
     * <pre>
     * if empty, query over all devices
     * </pre>
     */
    public int getDeviceIdListCount() {
      return deviceIdList_.size();
    }
    /**
     * <code>repeated string device_id_list = 2;</code>
     *
     * <pre>
     * if empty, query over all devices
     * </pre>
     */
    public java.lang.String getDeviceIdList(int index) {
      return deviceIdList_.get(index);
    }
    /**
     * <code>repeated string device_id_list = 2;</code>
     *
     * <pre>
     * if empty, query over all devices
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDeviceIdListBytes(int index) {
      return deviceIdList_.getByteString(index);
    }

    // optional uint64 lower_root_commit_lamport_time = 3;
    public static final int LOWER_ROOT_COMMIT_LAMPORT_TIME_FIELD_NUMBER = 3;
    private long lowerRootCommitLamportTime_;
    /**
     * <code>optional uint64 lower_root_commit_lamport_time = 3;</code>
     *
     * <pre>
     * The following fields are optional. If they do not exist, do not
     * use them as filters when generating responses.  Eg., if
     * lower_root_commit_lamport_time and
     * upper_root_commit_lamport_time are 1 and 3, then only return
     * updates that happened with a root commit lamport time of 1, 2,
     * or 3.  However, if they're unspecified, return all updates at
     * any time (unless some other filter is set).
     * </pre>
     */
    public boolean hasLowerRootCommitLamportTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 lower_root_commit_lamport_time = 3;</code>
     *
     * <pre>
     * The following fields are optional. If they do not exist, do not
     * use them as filters when generating responses.  Eg., if
     * lower_root_commit_lamport_time and
     * upper_root_commit_lamport_time are 1 and 3, then only return
     * updates that happened with a root commit lamport time of 1, 2,
     * or 3.  However, if they're unspecified, return all updates at
     * any time (unless some other filter is set).
     * </pre>
     */
    public long getLowerRootCommitLamportTime() {
      return lowerRootCommitLamportTime_;
    }

    // optional uint64 upper_root_commit_lamport_time = 4;
    public static final int UPPER_ROOT_COMMIT_LAMPORT_TIME_FIELD_NUMBER = 4;
    private long upperRootCommitLamportTime_;
    /**
     * <code>optional uint64 upper_root_commit_lamport_time = 4;</code>
     */
    public boolean hasUpperRootCommitLamportTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 upper_root_commit_lamport_time = 4;</code>
     */
    public long getUpperRootCommitLamportTime() {
      return upperRootCommitLamportTime_;
    }

    // optional uint64 lower_local_lamport_time = 5;
    public static final int LOWER_LOCAL_LAMPORT_TIME_FIELD_NUMBER = 5;
    private long lowerLocalLamportTime_;
    /**
     * <code>optional uint64 lower_local_lamport_time = 5;</code>
     */
    public boolean hasLowerLocalLamportTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 lower_local_lamport_time = 5;</code>
     */
    public long getLowerLocalLamportTime() {
      return lowerLocalLamportTime_;
    }

    // optional uint64 upper_local_lamport_time = 6;
    public static final int UPPER_LOCAL_LAMPORT_TIME_FIELD_NUMBER = 6;
    private long upperLocalLamportTime_;
    /**
     * <code>optional uint64 upper_local_lamport_time = 6;</code>
     */
    public boolean hasUpperLocalLamportTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 upper_local_lamport_time = 6;</code>
     */
    public long getUpperLocalLamportTime() {
      return upperLocalLamportTime_;
    }

    // optional .UUID root_application_uuid = 7;
    public static final int ROOT_APPLICATION_UUID_FIELD_NUMBER = 7;
    private ralph_version_protobuffs.UtilProto.UUID rootApplicationUuid_;
    /**
     * <code>optional .UUID root_application_uuid = 7;</code>
     */
    public boolean hasRootApplicationUuid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .UUID root_application_uuid = 7;</code>
     */
    public ralph_version_protobuffs.UtilProto.UUID getRootApplicationUuid() {
      return rootApplicationUuid_;
    }
    /**
     * <code>optional .UUID root_application_uuid = 7;</code>
     */
    public ralph_version_protobuffs.UtilProto.UUIDOrBuilder getRootApplicationUuidOrBuilder() {
      return rootApplicationUuid_;
    }

    // optional string event_name = 8;
    public static final int EVENT_NAME_FIELD_NUMBER = 8;
    private java.lang.Object eventName_;
    /**
     * <code>optional string event_name = 8;</code>
     */
    public boolean hasEventName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string event_name = 8;</code>
     */
    public java.lang.String getEventName() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_name = 8;</code>
     */
    public com.google.protobuf.ByteString
        getEventNameBytes() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .UUID event_uuid = 9;
    public static final int EVENT_UUID_FIELD_NUMBER = 9;
    private ralph_version_protobuffs.UtilProto.UUID eventUuid_;
    /**
     * <code>optional .UUID event_uuid = 9;</code>
     */
    public boolean hasEventUuid() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .UUID event_uuid = 9;</code>
     */
    public ralph_version_protobuffs.UtilProto.UUID getEventUuid() {
      return eventUuid_;
    }
    /**
     * <code>optional .UUID event_uuid = 9;</code>
     */
    public ralph_version_protobuffs.UtilProto.UUIDOrBuilder getEventUuidOrBuilder() {
      return eventUuid_;
    }

    private void initFields() {
      queryId_ = 0L;
      deviceIdList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      lowerRootCommitLamportTime_ = 0L;
      upperRootCommitLamportTime_ = 0L;
      lowerLocalLamportTime_ = 0L;
      upperLocalLamportTime_ = 0L;
      rootApplicationUuid_ = ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance();
      eventName_ = "";
      eventUuid_ = ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasQueryId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRootApplicationUuid()) {
        if (!getRootApplicationUuid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasEventUuid()) {
        if (!getEventUuid().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, queryId_);
      }
      for (int i = 0; i < deviceIdList_.size(); i++) {
        output.writeBytes(2, deviceIdList_.getByteString(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(3, lowerRootCommitLamportTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(4, upperRootCommitLamportTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(5, lowerLocalLamportTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(6, upperLocalLamportTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, rootApplicationUuid_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(8, getEventNameBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(9, eventUuid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, queryId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < deviceIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(deviceIdList_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getDeviceIdListList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, lowerRootCommitLamportTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, upperRootCommitLamportTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, lowerLocalLamportTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, upperLocalLamportTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, rootApplicationUuid_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getEventNameBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, eventUuid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code VersionRequestMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ralph_version_protobuffs.VersionRequestProto.VersionRequestMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ralph_version_protobuffs.VersionRequestProto.internal_static_VersionRequestMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ralph_version_protobuffs.VersionRequestProto.internal_static_VersionRequestMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage.class, ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage.Builder.class);
      }

      // Construct using ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRootApplicationUuidFieldBuilder();
          getEventUuidFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        queryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceIdList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        lowerRootCommitLamportTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        upperRootCommitLamportTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        lowerLocalLamportTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        upperLocalLamportTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (rootApplicationUuidBuilder_ == null) {
          rootApplicationUuid_ = ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance();
        } else {
          rootApplicationUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        eventName_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        if (eventUuidBuilder_ == null) {
          eventUuid_ = ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance();
        } else {
          eventUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ralph_version_protobuffs.VersionRequestProto.internal_static_VersionRequestMessage_descriptor;
      }

      public ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage getDefaultInstanceForType() {
        return ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage.getDefaultInstance();
      }

      public ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage build() {
        ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage buildPartial() {
        ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage result = new ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.queryId_ = queryId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          deviceIdList_ = new com.google.protobuf.UnmodifiableLazyStringList(
              deviceIdList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.deviceIdList_ = deviceIdList_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lowerRootCommitLamportTime_ = lowerRootCommitLamportTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.upperRootCommitLamportTime_ = upperRootCommitLamportTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lowerLocalLamportTime_ = lowerLocalLamportTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.upperLocalLamportTime_ = upperLocalLamportTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (rootApplicationUuidBuilder_ == null) {
          result.rootApplicationUuid_ = rootApplicationUuid_;
        } else {
          result.rootApplicationUuid_ = rootApplicationUuidBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.eventName_ = eventName_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        if (eventUuidBuilder_ == null) {
          result.eventUuid_ = eventUuid_;
        } else {
          result.eventUuid_ = eventUuidBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage) {
          return mergeFrom((ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage other) {
        if (other == ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage.getDefaultInstance()) return this;
        if (other.hasQueryId()) {
          setQueryId(other.getQueryId());
        }
        if (!other.deviceIdList_.isEmpty()) {
          if (deviceIdList_.isEmpty()) {
            deviceIdList_ = other.deviceIdList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDeviceIdListIsMutable();
            deviceIdList_.addAll(other.deviceIdList_);
          }
          onChanged();
        }
        if (other.hasLowerRootCommitLamportTime()) {
          setLowerRootCommitLamportTime(other.getLowerRootCommitLamportTime());
        }
        if (other.hasUpperRootCommitLamportTime()) {
          setUpperRootCommitLamportTime(other.getUpperRootCommitLamportTime());
        }
        if (other.hasLowerLocalLamportTime()) {
          setLowerLocalLamportTime(other.getLowerLocalLamportTime());
        }
        if (other.hasUpperLocalLamportTime()) {
          setUpperLocalLamportTime(other.getUpperLocalLamportTime());
        }
        if (other.hasRootApplicationUuid()) {
          mergeRootApplicationUuid(other.getRootApplicationUuid());
        }
        if (other.hasEventName()) {
          bitField0_ |= 0x00000080;
          eventName_ = other.eventName_;
          onChanged();
        }
        if (other.hasEventUuid()) {
          mergeEventUuid(other.getEventUuid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasQueryId()) {
          
          return false;
        }
        if (hasRootApplicationUuid()) {
          if (!getRootApplicationUuid().isInitialized()) {
            
            return false;
          }
        }
        if (hasEventUuid()) {
          if (!getEventUuid().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ralph_version_protobuffs.VersionRequestProto.VersionRequestMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint64 query_id = 1;
      private long queryId_ ;
      /**
       * <code>required uint64 query_id = 1;</code>
       */
      public boolean hasQueryId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 query_id = 1;</code>
       */
      public long getQueryId() {
        return queryId_;
      }
      /**
       * <code>required uint64 query_id = 1;</code>
       */
      public Builder setQueryId(long value) {
        bitField0_ |= 0x00000001;
        queryId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 query_id = 1;</code>
       */
      public Builder clearQueryId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        queryId_ = 0L;
        onChanged();
        return this;
      }

      // repeated string device_id_list = 2;
      private com.google.protobuf.LazyStringList deviceIdList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDeviceIdListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          deviceIdList_ = new com.google.protobuf.LazyStringArrayList(deviceIdList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string device_id_list = 2;</code>
       *
       * <pre>
       * if empty, query over all devices
       * </pre>
       */
      public java.util.List<java.lang.String>
          getDeviceIdListList() {
        return java.util.Collections.unmodifiableList(deviceIdList_);
      }
      /**
       * <code>repeated string device_id_list = 2;</code>
       *
       * <pre>
       * if empty, query over all devices
       * </pre>
       */
      public int getDeviceIdListCount() {
        return deviceIdList_.size();
      }
      /**
       * <code>repeated string device_id_list = 2;</code>
       *
       * <pre>
       * if empty, query over all devices
       * </pre>
       */
      public java.lang.String getDeviceIdList(int index) {
        return deviceIdList_.get(index);
      }
      /**
       * <code>repeated string device_id_list = 2;</code>
       *
       * <pre>
       * if empty, query over all devices
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDeviceIdListBytes(int index) {
        return deviceIdList_.getByteString(index);
      }
      /**
       * <code>repeated string device_id_list = 2;</code>
       *
       * <pre>
       * if empty, query over all devices
       * </pre>
       */
      public Builder setDeviceIdList(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDeviceIdListIsMutable();
        deviceIdList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string device_id_list = 2;</code>
       *
       * <pre>
       * if empty, query over all devices
       * </pre>
       */
      public Builder addDeviceIdList(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDeviceIdListIsMutable();
        deviceIdList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string device_id_list = 2;</code>
       *
       * <pre>
       * if empty, query over all devices
       * </pre>
       */
      public Builder addAllDeviceIdList(
          java.lang.Iterable<java.lang.String> values) {
        ensureDeviceIdListIsMutable();
        super.addAll(values, deviceIdList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string device_id_list = 2;</code>
       *
       * <pre>
       * if empty, query over all devices
       * </pre>
       */
      public Builder clearDeviceIdList() {
        deviceIdList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string device_id_list = 2;</code>
       *
       * <pre>
       * if empty, query over all devices
       * </pre>
       */
      public Builder addDeviceIdListBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDeviceIdListIsMutable();
        deviceIdList_.add(value);
        onChanged();
        return this;
      }

      // optional uint64 lower_root_commit_lamport_time = 3;
      private long lowerRootCommitLamportTime_ ;
      /**
       * <code>optional uint64 lower_root_commit_lamport_time = 3;</code>
       *
       * <pre>
       * The following fields are optional. If they do not exist, do not
       * use them as filters when generating responses.  Eg., if
       * lower_root_commit_lamport_time and
       * upper_root_commit_lamport_time are 1 and 3, then only return
       * updates that happened with a root commit lamport time of 1, 2,
       * or 3.  However, if they're unspecified, return all updates at
       * any time (unless some other filter is set).
       * </pre>
       */
      public boolean hasLowerRootCommitLamportTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 lower_root_commit_lamport_time = 3;</code>
       *
       * <pre>
       * The following fields are optional. If they do not exist, do not
       * use them as filters when generating responses.  Eg., if
       * lower_root_commit_lamport_time and
       * upper_root_commit_lamport_time are 1 and 3, then only return
       * updates that happened with a root commit lamport time of 1, 2,
       * or 3.  However, if they're unspecified, return all updates at
       * any time (unless some other filter is set).
       * </pre>
       */
      public long getLowerRootCommitLamportTime() {
        return lowerRootCommitLamportTime_;
      }
      /**
       * <code>optional uint64 lower_root_commit_lamport_time = 3;</code>
       *
       * <pre>
       * The following fields are optional. If they do not exist, do not
       * use them as filters when generating responses.  Eg., if
       * lower_root_commit_lamport_time and
       * upper_root_commit_lamport_time are 1 and 3, then only return
       * updates that happened with a root commit lamport time of 1, 2,
       * or 3.  However, if they're unspecified, return all updates at
       * any time (unless some other filter is set).
       * </pre>
       */
      public Builder setLowerRootCommitLamportTime(long value) {
        bitField0_ |= 0x00000004;
        lowerRootCommitLamportTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 lower_root_commit_lamport_time = 3;</code>
       *
       * <pre>
       * The following fields are optional. If they do not exist, do not
       * use them as filters when generating responses.  Eg., if
       * lower_root_commit_lamport_time and
       * upper_root_commit_lamport_time are 1 and 3, then only return
       * updates that happened with a root commit lamport time of 1, 2,
       * or 3.  However, if they're unspecified, return all updates at
       * any time (unless some other filter is set).
       * </pre>
       */
      public Builder clearLowerRootCommitLamportTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lowerRootCommitLamportTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 upper_root_commit_lamport_time = 4;
      private long upperRootCommitLamportTime_ ;
      /**
       * <code>optional uint64 upper_root_commit_lamport_time = 4;</code>
       */
      public boolean hasUpperRootCommitLamportTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 upper_root_commit_lamport_time = 4;</code>
       */
      public long getUpperRootCommitLamportTime() {
        return upperRootCommitLamportTime_;
      }
      /**
       * <code>optional uint64 upper_root_commit_lamport_time = 4;</code>
       */
      public Builder setUpperRootCommitLamportTime(long value) {
        bitField0_ |= 0x00000008;
        upperRootCommitLamportTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 upper_root_commit_lamport_time = 4;</code>
       */
      public Builder clearUpperRootCommitLamportTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        upperRootCommitLamportTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 lower_local_lamport_time = 5;
      private long lowerLocalLamportTime_ ;
      /**
       * <code>optional uint64 lower_local_lamport_time = 5;</code>
       */
      public boolean hasLowerLocalLamportTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 lower_local_lamport_time = 5;</code>
       */
      public long getLowerLocalLamportTime() {
        return lowerLocalLamportTime_;
      }
      /**
       * <code>optional uint64 lower_local_lamport_time = 5;</code>
       */
      public Builder setLowerLocalLamportTime(long value) {
        bitField0_ |= 0x00000010;
        lowerLocalLamportTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 lower_local_lamport_time = 5;</code>
       */
      public Builder clearLowerLocalLamportTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lowerLocalLamportTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 upper_local_lamport_time = 6;
      private long upperLocalLamportTime_ ;
      /**
       * <code>optional uint64 upper_local_lamport_time = 6;</code>
       */
      public boolean hasUpperLocalLamportTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 upper_local_lamport_time = 6;</code>
       */
      public long getUpperLocalLamportTime() {
        return upperLocalLamportTime_;
      }
      /**
       * <code>optional uint64 upper_local_lamport_time = 6;</code>
       */
      public Builder setUpperLocalLamportTime(long value) {
        bitField0_ |= 0x00000020;
        upperLocalLamportTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 upper_local_lamport_time = 6;</code>
       */
      public Builder clearUpperLocalLamportTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        upperLocalLamportTime_ = 0L;
        onChanged();
        return this;
      }

      // optional .UUID root_application_uuid = 7;
      private ralph_version_protobuffs.UtilProto.UUID rootApplicationUuid_ = ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ralph_version_protobuffs.UtilProto.UUID, ralph_version_protobuffs.UtilProto.UUID.Builder, ralph_version_protobuffs.UtilProto.UUIDOrBuilder> rootApplicationUuidBuilder_;
      /**
       * <code>optional .UUID root_application_uuid = 7;</code>
       */
      public boolean hasRootApplicationUuid() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .UUID root_application_uuid = 7;</code>
       */
      public ralph_version_protobuffs.UtilProto.UUID getRootApplicationUuid() {
        if (rootApplicationUuidBuilder_ == null) {
          return rootApplicationUuid_;
        } else {
          return rootApplicationUuidBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .UUID root_application_uuid = 7;</code>
       */
      public Builder setRootApplicationUuid(ralph_version_protobuffs.UtilProto.UUID value) {
        if (rootApplicationUuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rootApplicationUuid_ = value;
          onChanged();
        } else {
          rootApplicationUuidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .UUID root_application_uuid = 7;</code>
       */
      public Builder setRootApplicationUuid(
          ralph_version_protobuffs.UtilProto.UUID.Builder builderForValue) {
        if (rootApplicationUuidBuilder_ == null) {
          rootApplicationUuid_ = builderForValue.build();
          onChanged();
        } else {
          rootApplicationUuidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .UUID root_application_uuid = 7;</code>
       */
      public Builder mergeRootApplicationUuid(ralph_version_protobuffs.UtilProto.UUID value) {
        if (rootApplicationUuidBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              rootApplicationUuid_ != ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance()) {
            rootApplicationUuid_ =
              ralph_version_protobuffs.UtilProto.UUID.newBuilder(rootApplicationUuid_).mergeFrom(value).buildPartial();
          } else {
            rootApplicationUuid_ = value;
          }
          onChanged();
        } else {
          rootApplicationUuidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .UUID root_application_uuid = 7;</code>
       */
      public Builder clearRootApplicationUuid() {
        if (rootApplicationUuidBuilder_ == null) {
          rootApplicationUuid_ = ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance();
          onChanged();
        } else {
          rootApplicationUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .UUID root_application_uuid = 7;</code>
       */
      public ralph_version_protobuffs.UtilProto.UUID.Builder getRootApplicationUuidBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getRootApplicationUuidFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .UUID root_application_uuid = 7;</code>
       */
      public ralph_version_protobuffs.UtilProto.UUIDOrBuilder getRootApplicationUuidOrBuilder() {
        if (rootApplicationUuidBuilder_ != null) {
          return rootApplicationUuidBuilder_.getMessageOrBuilder();
        } else {
          return rootApplicationUuid_;
        }
      }
      /**
       * <code>optional .UUID root_application_uuid = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ralph_version_protobuffs.UtilProto.UUID, ralph_version_protobuffs.UtilProto.UUID.Builder, ralph_version_protobuffs.UtilProto.UUIDOrBuilder> 
          getRootApplicationUuidFieldBuilder() {
        if (rootApplicationUuidBuilder_ == null) {
          rootApplicationUuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ralph_version_protobuffs.UtilProto.UUID, ralph_version_protobuffs.UtilProto.UUID.Builder, ralph_version_protobuffs.UtilProto.UUIDOrBuilder>(
                  rootApplicationUuid_,
                  getParentForChildren(),
                  isClean());
          rootApplicationUuid_ = null;
        }
        return rootApplicationUuidBuilder_;
      }

      // optional string event_name = 8;
      private java.lang.Object eventName_ = "";
      /**
       * <code>optional string event_name = 8;</code>
       */
      public boolean hasEventName() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string event_name = 8;</code>
       */
      public java.lang.String getEventName() {
        java.lang.Object ref = eventName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          eventName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_name = 8;</code>
       */
      public com.google.protobuf.ByteString
          getEventNameBytes() {
        java.lang.Object ref = eventName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_name = 8;</code>
       */
      public Builder setEventName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        eventName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_name = 8;</code>
       */
      public Builder clearEventName() {
        bitField0_ = (bitField0_ & ~0x00000080);
        eventName_ = getDefaultInstance().getEventName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_name = 8;</code>
       */
      public Builder setEventNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        eventName_ = value;
        onChanged();
        return this;
      }

      // optional .UUID event_uuid = 9;
      private ralph_version_protobuffs.UtilProto.UUID eventUuid_ = ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ralph_version_protobuffs.UtilProto.UUID, ralph_version_protobuffs.UtilProto.UUID.Builder, ralph_version_protobuffs.UtilProto.UUIDOrBuilder> eventUuidBuilder_;
      /**
       * <code>optional .UUID event_uuid = 9;</code>
       */
      public boolean hasEventUuid() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .UUID event_uuid = 9;</code>
       */
      public ralph_version_protobuffs.UtilProto.UUID getEventUuid() {
        if (eventUuidBuilder_ == null) {
          return eventUuid_;
        } else {
          return eventUuidBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .UUID event_uuid = 9;</code>
       */
      public Builder setEventUuid(ralph_version_protobuffs.UtilProto.UUID value) {
        if (eventUuidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventUuid_ = value;
          onChanged();
        } else {
          eventUuidBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .UUID event_uuid = 9;</code>
       */
      public Builder setEventUuid(
          ralph_version_protobuffs.UtilProto.UUID.Builder builderForValue) {
        if (eventUuidBuilder_ == null) {
          eventUuid_ = builderForValue.build();
          onChanged();
        } else {
          eventUuidBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .UUID event_uuid = 9;</code>
       */
      public Builder mergeEventUuid(ralph_version_protobuffs.UtilProto.UUID value) {
        if (eventUuidBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              eventUuid_ != ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance()) {
            eventUuid_ =
              ralph_version_protobuffs.UtilProto.UUID.newBuilder(eventUuid_).mergeFrom(value).buildPartial();
          } else {
            eventUuid_ = value;
          }
          onChanged();
        } else {
          eventUuidBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .UUID event_uuid = 9;</code>
       */
      public Builder clearEventUuid() {
        if (eventUuidBuilder_ == null) {
          eventUuid_ = ralph_version_protobuffs.UtilProto.UUID.getDefaultInstance();
          onChanged();
        } else {
          eventUuidBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .UUID event_uuid = 9;</code>
       */
      public ralph_version_protobuffs.UtilProto.UUID.Builder getEventUuidBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getEventUuidFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .UUID event_uuid = 9;</code>
       */
      public ralph_version_protobuffs.UtilProto.UUIDOrBuilder getEventUuidOrBuilder() {
        if (eventUuidBuilder_ != null) {
          return eventUuidBuilder_.getMessageOrBuilder();
        } else {
          return eventUuid_;
        }
      }
      /**
       * <code>optional .UUID event_uuid = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ralph_version_protobuffs.UtilProto.UUID, ralph_version_protobuffs.UtilProto.UUID.Builder, ralph_version_protobuffs.UtilProto.UUIDOrBuilder> 
          getEventUuidFieldBuilder() {
        if (eventUuidBuilder_ == null) {
          eventUuidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ralph_version_protobuffs.UtilProto.UUID, ralph_version_protobuffs.UtilProto.UUID.Builder, ralph_version_protobuffs.UtilProto.UUIDOrBuilder>(
                  eventUuid_,
                  getParentForChildren(),
                  isClean());
          eventUuid_ = null;
        }
        return eventUuidBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:VersionRequestMessage)
    }

    static {
      defaultInstance = new VersionRequestMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:VersionRequestMessage)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_VersionRequestMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_VersionRequestMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024versionRequest.proto\032\nutil.proto\"\252\002\n\025V" +
      "ersionRequestMessage\022\020\n\010query_id\030\001 \002(\004\022\026" +
      "\n\016device_id_list\030\002 \003(\t\022&\n\036lower_root_com" +
      "mit_lamport_time\030\003 \001(\004\022&\n\036upper_root_com" +
      "mit_lamport_time\030\004 \001(\004\022 \n\030lower_local_la" +
      "mport_time\030\005 \001(\004\022 \n\030upper_local_lamport_" +
      "time\030\006 \001(\004\022$\n\025root_application_uuid\030\007 \001(" +
      "\0132\005.UUID\022\022\n\nevent_name\030\010 \001(\t\022\031\n\nevent_uu" +
      "id\030\t \001(\0132\005.UUIDB/\n\030ralph_version_protobu" +
      "ffsB\023VersionRequestProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_VersionRequestMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_VersionRequestMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_VersionRequestMessage_descriptor,
              new java.lang.String[] { "QueryId", "DeviceIdList", "LowerRootCommitLamportTime", "UpperRootCommitLamportTime", "LowerLocalLamportTime", "UpperLocalLamportTime", "RootApplicationUuid", "EventName", "EventUuid", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ralph_version_protobuffs.UtilProto.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
