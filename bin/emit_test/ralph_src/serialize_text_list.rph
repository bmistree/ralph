alias Endpoint ListSerializer as 'SerializeTextListJava.ListSerializer';
alias Endpoint RemoteInstaller as 'RemoteInstallerJava.RemoteInstaller';

Endpoint ListSerializer
{
    Remote ListSerializer remote_endpt = null;

    /**
       {@code factory} should be factory for ListSerializer
     */
    install_partner(ServiceFactory factory)
    {
        ServiceReference service_reference = null;
        Service RemoteInstaller remote_installer;
        service_reference = remote_installer.install_remote_service_factory(factory);
        remote_endpt =
            factory.construct_remote_from_reference(service_reference);
    }

    /** NonAtomic Text lists */
    concatenate_strings(Text string_a, Text string_b, Text string_c)
        returns Text
    {
        List(element: Text) list_to_concat;
        list_to_concat.append(string_a);
        list_to_concat.append(string_b);
        list_to_concat.append(string_c);
        Text concatenated;
        concatenated =
            remote_endpt.partner_concatenate_strings_in_list(list_to_concat);
        return concatenated;
    }

    // called only by partner
    partner_concatenate_strings_in_list(List(element:Text) to_concat)
        returns Text
    {
        Text to_return = '';
        for (Text text in to_concat)
            to_return = to_return + text;
        return to_return;
    }


    /** Atomic Text lists */
    atom_concatenate_strings(Text string_a, Text string_b, Text string_c)
        returns Text
    {
        TVar List(element: Text) list_to_concat;
        list_to_concat.append(string_a);
        list_to_concat.append(string_b);
        list_to_concat.append(string_c);
        Text concatenated;
        concatenated =
            remote_endpt.atom_partner_concatenate_strings_in_list(list_to_concat);
        return concatenated;
    }

    // called only by partner
    atom_partner_concatenate_strings_in_list(TVar List(element:Text) to_concat)
        returns Text
    {
        Text to_return = '';
        for (Text text in to_concat)
            to_return = to_return + text;
        return to_return;
    }



}
