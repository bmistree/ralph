alias Endpoint Receiver as 'ReferenceServiceFactoryJava.Receiver';
alias Endpoint Sender as 'ReferenceServiceFactoryJava.Sender';
alias Endpoint ReceiverCreated as 'ReferenceServiceFactoryJava.ReceiverCreated';
alias Endpoint SenderCreated as 'ReferenceServiceFactoryJava.SenderCreated';


Endpoint Receiver
{
    Endpoint ReceiverCreated receiver_created_endpoint = null;
    
    receive_and_instantiate(ServiceFactory partner_service_factory)
        returns ServiceReference
    {
        receiver_created_endpoint =
            dynamic_cast<Endpoint ReceiverCreated>(
                partner_service_factory.construct());
        return receiver_created_endpoint.rpc_reference();
   }
}

Endpoint Sender
{
   instantiate_remote(ServiceFactory remote_sf, ServiceFactory local_sf)
       returns Number
   {
       ServiceReference sr = @partner.receive_and_instantiate(remote_sf);

       Endpoint SenderCreated sender_created_endpoint =
           dynamic_cast<Endpoint SenderCreated>(
               local_sf.construct_from_reference(sr));

       Number returned_number;
       returned_number = sender_created_endpoint.call_partner();
       return returned_number;
   }
}

Endpoint ReceiverCreated
{
    some_method() returns Number
    {
        return 1.0;
    }
}

Endpoint SenderCreated
{
    call_partner() returns Number
    {
        return @partner.some_method();
    }
}
