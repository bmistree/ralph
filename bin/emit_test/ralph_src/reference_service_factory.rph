alias Endpoint Receiver as 'ReferenceServiceFactoryJava.Receiver';
alias Endpoint Sender as 'ReferenceServiceFactoryJava.Sender';
alias Endpoint ReceiverCreated as 'ReferenceServiceFactoryJava.ReceiverCreated';
alias Endpoint RemoteInstaller as 'RemoteInstallerJava.RemoteInstaller';

Endpoint Receiver
{
    Endpoint ReceiverCreated receiver_created_endpoint = null;
    
    receive_and_instantiate(ServiceFactory partner_service_factory)
        returns ServiceReference
    {
        receiver_created_endpoint =
            dynamic_cast<Endpoint ReceiverCreated>(
                partner_service_factory.construct());
        return receiver_created_endpoint.rpc_reference();
   }
}

Endpoint Sender
{
    Remote Receiver remote_endpt = null;

   /**
      {@code factory} should be factory for Receiver
    */
   install_partner(ServiceFactory factory)
   {
       ServiceReference service_reference = null;
       Service RemoteInstaller remote_installer;
       service_reference = remote_installer.install_remote_service_factory(factory);
       remote_endpt =
           factory.construct_remote_from_reference(service_reference);
   }

   instantiate_remote(ServiceFactory remote_sf)
       returns Number
   {
       ServiceReference sr = null;
       sr = remote_endpt.receive_and_instantiate(remote_sf);

       Endpoint ReceiverCreated receiver_created_endpoint =
           dynamic_cast<Endpoint ReceiverCreated>(
               remote_sf.construct_from_reference(sr));

       Number returned_number;
       returned_number = receiver_created_endpoint.some_method();
       return returned_number;
   }
}

Endpoint ReceiverCreated
{
    some_method() returns Number
    {
        return 1.0;
    }
}
