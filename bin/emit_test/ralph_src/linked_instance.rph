alias Endpoint LinkedInstanceEndpoint as 'LinkedInstanceJava.LinkedInstanceEndpoint';

Struct Wrapper
{
    Remote LinkedInstanceEndpoint child = null;
}

Endpoint LinkedInstanceEndpoint
{
    TVar Number to_increment = 0;
    TVar List(element : Struct Wrapper) children;
    Text name;


    set_name(Text new_name)
    {
        name = new_name;
    }

    get_empty_text_list() returns List(element: Text)
    {
        List (element: Text) to_return;
        return to_return;
    }

    append_text_to_text_list(
        Text to_append, List(element: Text) text_list)
        returns List(element: Text)
    {
        text_list.append(to_append);
        return text_list;
    }

    chain_add_children(
        List(element: Text) remote_uuids, List(element: Text) names,
        ServiceFactory factory)
    {
        if (remote_uuids.size() == 0)
            return;

        Text remote_uuid = remote_uuids.get(0);
        remote_uuids.remove(0);

        Text next_name = names.get(0);
        names.remove(0);

        Remote LinkedInstanceEndpoint next = null;
        next = add_child(remote_uuid, factory);
        next.chain_add_children(remote_uuids, factory);
        next.set_name(next_name);
    }

    add_child(Text remote_uuid, ServiceFactory factory)
        returns Remote LinkedInstanceEndpoint
    {
        Remote LinkedInstanceEndpoint child = null;
        atomically
        {
            ServiceReference service_reference = null;
            service_reference = install(remote_uuid, factory);

            child =
                factory.construct_remote_from_reference(service_reference);

            Struct Wrapper wrapper;
            wrapper.child = child;
            children.append(wrapper);
        }
        return child;
    }

    increment_and_request_others_to_increment()
    {
        atomically
        {
            to_increment = to_increment + 1;

            for (Struct Wrapper wrapper in children)
            {
                Remote LinkedInstanceEndpoint endpt = null;
                endpt = wrapper.child;
                endpt.request_increment_from_instance();
            }
        }
    }
}
