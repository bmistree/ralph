alias Interface ISerializeStructSum as 'ISerializeStructSumJava.ISerializeStructSum';
alias Endpoint RemoteInstaller as 'RemoteInstallerJava.RemoteInstaller';
alias Endpoint MapSerializer as 'SerializeStructWithMapJava.MapSerializer';

Struct MapHolder
{
    Map(from: Number, to: Number) map_holder;
}

Service MapSerializer implements Interface ISerializeStructSum
{
    Remote MapSerializer remote_endpt = null;

    /**
       {@code factory} should be factory for MapSerializer
     */
    install_partner(ServiceFactory factory)
    {
        ServiceReference service_reference = null;
        Service RemoteInstaller remote_installer;
        service_reference = remote_installer.install_remote_service_factory(factory);
        remote_endpt =
            factory.construct_remote_from_reference(service_reference);
    }

    /** Maps */
    sum_numbers(
        Number a, Number b, Number c, Number d) returns Number
    {
        Struct MapHolder s1;
        s1.map_holder.set(1,a);
        s1.map_holder.set(2,b);
        s1.map_holder.set(3,c);
        s1.map_holder.set(4,d);

        Number to_return;
        to_return = remote_endpt.partner_map_sum(s1);
        return to_return;
    }

    partner_map_sum(Struct MapHolder s1) returns Number
    {
        Number to_return = 0;
        for (Number key in s1.map_holder)
        {
            Number value = s1.map_holder.get(key);
            to_return = to_return + value;
        }
        return to_return;
    }
}
