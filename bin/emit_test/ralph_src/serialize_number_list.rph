alias Endpoint ListSerializer as 'SerializeNumberListJava.ListSerializer';
alias Endpoint RemoteInstaller as 'RemoteInstallerJava.RemoteInstaller';

Endpoint ListSerializer
{
    Remote ListSerializer remote_endpt = null;

    /**
       {@code factory} should be factory for ListSerializer
     */
    install_partner(ServiceFactory factory)
    {
        ServiceReference service_reference = null;
        Service RemoteInstaller remote_installer;
        service_reference = remote_installer.install_remote_service_factory(factory);
        remote_endpt =
            factory.construct_remote_from_reference(service_reference);
    }


    /** NonAtomc Number lists */
    sum_numbers(Number max_number) returns Number
    {
        List(element: Number) list_to_sum;
        list_to_sum = range(0,max_number);
        Number sum;
        sum = remote_endpt.partner_sum_numbers_in_list(list_to_sum);
        return sum;
    }

    // called only by partner
    partner_sum_numbers_in_list(List(element:Number) to_sum) returns Number
    {
        Number to_return = 0;
        for (Number num in to_sum)
            to_return = to_return + num;
        return to_return;
    }

    /** Atom Number lists */
    sum_atom_numbers(Number max_number) returns Number
    {
        TVar List(element: Number) list_to_sum;
        for (Number num in range(0,max_number))
            list_to_sum.append(num);
        Number sum;
        sum = remote_endpt.partner_sum_numbers_in_atom_list(list_to_sum);
        return sum;
    }

    partner_sum_numbers_in_atom_list(TVar List(element:Number) to_sum)
        returns Number
    {
        Number to_return = 0;
        for (Number num in to_sum)
            to_return = to_return + num;
        return to_return;
    }

}
