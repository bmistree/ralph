<project name="RalphJavaLibTest" default="compile" basedir=".">
  
  <description>
    Test cases for java libraries.
  </description>

  <dirname
    property="lib_test_dir"
    file="${ant.file.RalphJavaLibTest}"
  />

  <!-- global properties for this build file -->
  <property name="build.dir" location="${lib_test_dir}/classes"/>
  <property name="src.dir" location="${lib_test_dir}/.."/>
  <property
      name="lib_build_path"
      location="${lib_test_dir}/../../../ralph/java_lib/build"/>
  <property
      name="lib_class_path" location="${lib_build_path}/classes/"/>
  <property
      name="proto_class_path" location="${lib_build_path}/../protobuf-java-2.4.1.jar"/>
  
  <!-- set up build directories for test -->
  <target name="init" description="setup build directories">
    <echo message="Setting up build directory for tests"/>
    <mkdir dir="${build.dir}"/>
  </target>

  <!-- compile java libraries -->
  <target name="compile_libs" depends="init" description="compile library files">
    <ant antfile="${lib_build_path}/build.xml" target="compile_all" />  
  </target>

  <!-- compile all library tests -->
  <target
      name="compile_all"
      depends="init,compile_libs"
      description="compile library and test files">

    <javac
        srcdir="${src.dir}"
        destdir="${build.dir}"
        classpath="${lib_class_path}"
        includeantruntime="false" />
  </target>


  <!-- Run all tests specified -->
  <target
      name="run_all"
      depends=
        "run_WriteReadVarStack,run_WriteReadTVar,run_PartnersNoConflict,
         run_PartnersModifyRemoteState,run_BasicDefer">
  </target>

  
  <!-- List individual tests -->
  <target
      name="run_WriteReadVarStack"
      depends="compile_all"
      description="Run stack tests.">
    <java
        dir="${build.dir}"
        classname="java_lib_test.WriteReadVarStack" fork="yes">
        <arg line="${args}"/>
    </java>
  </target>

  <target
      name="run_WriteReadTVar"
      depends="compile_all"
      description="Run tvar tests.">
    <java
        dir="${build.dir}"
        classname="java_lib_test.WriteReadTVar" fork="yes">
        <arg line="${args}"/>
    </java>
  </target>

  <target
      name="run_PartnersNoConflict"
      depends="compile_all"
      description=
        "Checks that rpcs issued between partners without conflict send and return args.">
    <java
        dir="${build.dir}"
        classname="java_lib_test.PartnersNoConflict"
        fork="yes"
        classpath="${build.dir}:${proto_class_path}">
        <arg line="${args}"/>
    </java>
  </target>


  <target
      name="run_PartnersModifyRemoteState"
      depends="compile_all"
      description="Increments value on remote endpoint.">
    <java
        dir="${build.dir}"
        classname="java_lib_test.PartnersModifyRemoteState"
        fork="yes"
        classpath="${build.dir}:${proto_class_path}">
        <arg line="${args}"/>
    </java>
  </target>

    <target
      name="run_BasicDefer"
      depends="compile_all"
      description="Tries to run a defer statement.">
    <java
        dir="${build.dir}"
        classname="java_lib_test.BasicDefer"
        fork="yes"
        classpath="${build.dir}:${proto_class_path}">
        <arg line="${args}"/>
    </java>
  </target>

  
  
  <!-- Delete the build directory -->
  <target name="clean" description="get rid of build dir">
    <delete dir="${build.dir}"/>
  </target>

  <target
      name="clean_all"
      depends="clean"
      description="get rid of build dir and all built libs">
    
    <ant antfile="${lib_build_path}/build.xml" target="clean" />
    
  </target>

  
</project>
